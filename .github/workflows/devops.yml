name: DevOps staging

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  delivery:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true


      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MY_TOKEN }}

      - name: Build and Push Docker image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}:staging \
            -t ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }} \
            -f DevOpsWebApplication/Dockerfile \
            .
          docker push ghcr.io/${{ github.repository }} --all-tags    

      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semver-app.outputs.version }}
          generateReleaseNotes: true
          allowUpdates: true
          body: |
            This release includes the following container image:
            http://ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }}

      - name: Display Version
        run: echo "Generated version is ${{ steps.semver-app.outputs.version }}"

      - name: Deliver Docker Compose file to staging
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "docker-compose.yaml"
          target: dowa/

      - name: Run Docker Compose on staging server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull
            docker compose up -d
  
  
  deployment:
    needs: delivery
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    # Husk følgende når du laver checkout :) Ellers kan du få problemer med semantisk versionering og andet.
    # with:
    #   fetch-depth: 0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # En general tommelfinger-regel: Pipelines arbejder med kører, tester og pakker produktet, men manipulere ikke med det.
      # At have en docker compose fil specifikt til produktionsmiljøet er en rigtig god idé - men hvorfor ikke skrive den ind i repositoriet via et commit? :)
      # Desuden bruger du et tag, der hedder "production", men hvor stammer den fra?
      # Lige nu vil den sandsynligvis fejle, fordi imaget ikke findes på serveren.
      - name: Create production docker-compose.yml
        run: |
          cat > docker-compose.production.yml << EOL
          services:
            web:
              image: ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):production
              ports:
                - "80:8080"
          EOL

      - name: Deliver Docker Compose file to production
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          source: "docker-compose.production.yml"
          target: dowa/

      - name: Run Docker Compose on production server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          script: |
            cd dowa
            mv docker-compose.production.yml docker-compose.yml
            docker compose pull
            docker compose up -d