name: DevOps Workflow

on:
  push:
    branches:
      - main

jobs:
  delivery:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        id: repo-name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and Push Docker image
        run: |
          docker build \
            -t ghcr.io/${{ env.REPO_NAME }}:staging \
            -t ghcr.io/${{ env.REPO_NAME }}:${{ steps.semver-app.outputs.version }} \
            -t ghcr.io/${{ env.REPO_NAME }}:production \
            -f DevOpsWebApplication/Dockerfile \
            .
          docker push ghcr.io/${{ env.REPO_NAME }} --all-tags

      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semver-app.outputs.version }}
          generateReleaseNotes: true
          body: |
            This release includes the following container image:
            http://ghcr.io/${{ env.REPO_NAME }}:${{ steps.semver-app.outputs.version }}

      - name: Deliver Docker Compose file to staging
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "docker-compose.yml"
          target: dowa/

      - name: Run Docker Compose on staging server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull
            docker compose up -d

  deployment:
    needs: delivery
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create production docker-compose.yml
        run: |
          cat > docker-compose.production.yml << EOL
          services:
            web:
              image: ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):production
              ports:
                - "80:8080"
          EOL

      - name: Deliver Docker Compose file to production
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          source: "docker-compose.production.yml"
          target: dowa/

      - name: Run Docker Compose on production server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          script: |
            cd dowa
            mv docker-compose.production.yml docker-compose.yml
            docker compose pull
            docker compose up -d